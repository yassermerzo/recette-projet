{"version":3,"sources":["components/ajouterrecette.js","components/modifierrecette.js","index.js"],"names":["AjouterRecette","props","state","name","ingredients","changerNom","bind","changerIngredients","handleSubmit","handleCancel","e","this","setState","target","value","preventDefault","onAdd","split","onAddModal","onShow","validRecette","test","Modal","className","show","onHide","Header","closeButton","Title","Body","FormGroup","controlId","ControlLabel","FormControl","type","required","onChange","placeholder","componentClass","Footer","Button","disabled","onClick","React","Component","ModifierRecette","handleEdit","onEdit","currentlyEditing","onEditModal","recette","join","modalClassName","formClassName","prevName","prevIngredients","Recette","recettes","showAdd","showEdit","showAddModal","showEditModal","ajouterRecette","modifierRecette","suprimerRecette","localStorage","JSON","parse","getItem","index","push","setItem","stringify","newName","newIngredients","slice","splice","PanelGroup","accordion","id","map","Panel","eventKey","key","Heading","toggle","collapsible","ListGroup","ingredient","ListGroupItem","ButtonToolbar","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5011734.chunk.js","sourcesContent":["//importation\r\nimport React from 'react';\r\nimport {Modal,ControlLabel,FormGroup,FormControl,Button} from 'react-bootstrap';\r\n\r\n//creer une classe pour ajouter une recette\r\nexport class AjouterRecette extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {name: \"\", ingredients: \"\"};\r\n    this.changerNom = this.changerNom.bind(this);\r\n    this.changerIngredients = this.changerIngredients.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n  }\r\n  changerNom(e) {//changer le nom\r\n    this.setState({name: e.target.value});\r\n  }\r\n  changerIngredients(e) {//changer les ingredients\r\n    this.setState({ingredients: e.target.value});\r\n  }\r\n  handleSubmit(e) {//manipuler les donnees tapées pour creer une nouvelle recette\r\n    e.preventDefault();\r\n    const onAdd = this.props.onAdd;\r\n    const regExp = /\\s*,\\s*/;\r\n    var newName = this.state.name;\r\n    var newIngredients = this.state.ingredients.split(regExp);\r\n    var newRecette = {name: newName, ingredients: newIngredients};\r\n    onAdd(newRecette);\r\n    this.setState({name: \"\", ingredients: \"\"});\r\n  }\r\n  handleCancel() {\r\n    const onAddModal = this.props.onAddModal;\r\n    this.setState({name: \"\", ingredients: \"\"});\r\n    onAddModal();\r\n  }\r\n  render() {\r\n    const onShow = this.props.onShow;\r\n    var regex1 = /^\\S/;\r\n    var regex2 = /^[^,\\s]/;\r\n   var regex3 = /[^,\\s]$/;\r\n    const validRecette = regex1.test(this.state.name) && regex2.test(this.state.ingredients) && regex3.test(this.state.ingredients);\r\n    return(\r\n      \r\n      <Modal  className=\"recette\" show={onShow} onHide={this.handleCancel}>\r\n        <div className=\"recette\"><Modal.Header closeButton>\r\n          <Modal.Title>Nouvelle Recette</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <FormGroup controlId=\"formControlsName\">\r\n            <ControlLabel>Nom de la Recette\r\n            </ControlLabel>\r\n            <FormControl type=\"text\" required onChange={this.changerNom} value={this.state.name} placeholder=\"Entrer le Nom\" />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"formControlsIngredients\">\r\n            <ControlLabel>Ingredients de la Recette</ControlLabel>\r\n            <FormControl componentClass=\"textarea\" type=\"text\" required onChange={this.changerIngredients} value={this.state.ingredients} placeholder=\"Entrer les Ingrédients(separés par virgules)\" />\r\n          </FormGroup>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button disabled={!validRecette} className=\"save\" onClick={this.handleSubmit}>Sauvegarder Recette</Button>\r\n        </Modal.Footer>\r\n        </div>\r\n      </Modal>\r\n      \r\n    );\r\n  }\r\n};","//importation\r\nimport React from 'react';\r\nimport {Modal,ControlLabel,Button,FormGroup,FormControl} from 'react-bootstrap';\r\n\r\n//creer une classe pour modifier\r\nexport class ModifierRecette extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {name: \"\", ingredients: \"\"};\r\n    this.changerNom = this.changerNom.bind(this);\r\n    this.changerIngredients = this.changerIngredients.bind(this);\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    const prevName = state.prevName;\r\n    const prevIngredients = state.prevIngredients;\r\n    const name = prevName !== props.recette.name ? props.recette.name : state.name;\r\n    const ingredients = prevIngredients !== props.recette.ingredients.join(\",\") ? props.recette.ingredients.join(\",\") : state.ingredients;\r\n    return {\r\n      prevName: props.recette.name, name,\r\n      prevIngredients: props.recette.ingredients.join(\",\"), ingredients,\r\n    }\r\n  }\r\n  changerNom(e) {//changer le nom selon input\r\n    this.setState({name: e.target.value});\r\n  }\r\n  changerIngredients(e) {//changer les ingredients selon input\r\n    this.setState({ingredients: e.target.value});\r\n  }\r\n  handleEdit(e) {//manipuler les donnees tapées pour modifier la recette\r\n    e.preventDefault();\r\n    const onEdit = this.props.onEdit;\r\n    const currentlyEditing = this.props.currentlyEditing;\r\n    const regExp = /\\s*,\\s*/;\r\n    var name = this.state.name;\r\n    var ingredients = this.state.ingredients.split(regExp);\r\n    onEdit(name, ingredients, currentlyEditing);\r\n  }\r\n  handleCancel() {\r\n    const onEditModal = this.props.onEditModal;\r\n    this.setState({name: this.props.recette.name, ingredients: this.props.recette.ingredients.join(\",\")});\r\n    onEditModal();\r\n  }\r\n  render() {\r\n    const onShow = this.props.onShow;\r\n    var regex1 = /^\\S/;\r\n    var regex2 = /^[^,\\s]/;\r\n    var regex3 = /[^,\\s]$/;\r\n    const validRecette = regex1.test(this.state.name) && regex2.test(this.state.ingredients) && regex3.test(this.state.ingredients);\r\n    return(\r\n      <Modal modalClassName=\"modal-dialog\" show={onShow} onHide={this.handleCancel}>\r\n        <div className=\"recette\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modifier la Recette</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <FormGroup formClassName=\"test\" controlId=\"formControlsName\">\r\n            <ControlLabel>Nom de la Recette</ControlLabel>\r\n            <FormControl type=\"text\" required onChange={this.changerNom} value={this.state.name} placeholder=\"Entrer le Nom\" />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"formControlsIngredients\">\r\n            <ControlLabel>Ingredients de la Recette</ControlLabel>\r\n            <FormControl componentClass=\"textarea\" type=\"text\" required onChange={this.changerIngredients} value={this.state.ingredients} placeholder=\"Entrer les Ingrédients(separés par virgules)\" />\r\n          </FormGroup>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button className=\"save\" disabled={!validRecette} onClick={this.handleEdit}>Sauvegarder la Recette</Button>\r\n        </Modal.Footer>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n};","//importation\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {PanelGroup,Panel,Button,ButtonToolbar,ListGroup,ListGroupItem} from 'react-bootstrap';\nimport './css/index.css';\nimport {AjouterRecette} from './components/ajouterrecette';\nimport {ModifierRecette} from './components/modifierrecette';\n\nclass Recette extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recettes: [],\n      showAdd: false,\n      showEdit: false,\n      currentlyEditing: 0\n    };\n    this.showAddModal = this.showAddModal.bind(this);\n    this.showEditModal = this.showEditModal.bind(this);\n    this.ajouterRecette = this.ajouterRecette.bind(this);\n    this.modifierRecette = this.modifierRecette.bind(this);\n    this.suprimerRecette = this.suprimerRecette.bind(this);\n  }\n  componentDidMount() {//charger le local storage\n    var recettes = (typeof localStorage[\"recettes\"] !== \"undefined\") ? JSON.parse(localStorage.getItem(\"recettes\")) : [\n      {name: \"Crêpes\", ingredients: [\"250g de Farine\", \"4 Oeufs\", \"1/2 litre de lait\", \"Pincée de Sel\", \"2 c à s de Sucre\",\"50g de Beurre fondu\"]},\n     \n    ];\n    this.setState({recettes: recettes});\n  }\n  showAddModal() {//montrer ajouter\n    this.setState({showAdd: !this.state.showAdd});\n  }\n  showEditModal(index) {//montrer modifier\n    this.setState({currentlyEditing: index, showEdit: !this.state.showEdit});\n  }\n  ajouterRecette(recette) {//creer une nouvelle recette\n    let recettes = this.state.recettes;\n    recettes.push(recette);\n    localStorage.setItem('recettes', JSON.stringify(recettes));\n    this.setState({recettes: recettes});\n    this.showAddModal();\n  }\n  modifierRecette(newName, newIngredients, currentlyEditing) {//modifier une recette\n    let recettes = this.state.recettes;\n    recettes[currentlyEditing] = {name: newName, ingredients: newIngredients};\n    localStorage.setItem('recettes', JSON.stringify(recettes));\n    this.setState({recettes: recettes});\n    this.showEditModal(currentlyEditing);\n  }\n  suprimerRecette(index) {//suprimer une recette\n    let recettes = this.state.recettes.slice();\n    recettes.splice(index, 1);\n    localStorage.setItem('recettes', JSON.stringify(recettes));\n    this.setState({recettes: recettes, currentlyEditing: 0});\n  }\n  render() {\n    const recettes = this.state.recettes;\n    var currentlyEditing = this.state.currentlyEditing;\n    return(\n      <div className=\"recette\">\n        <h1>Boite à Recettes</h1>\n        <PanelGroup accordion  id=\"recettes\">\n          {recettes.map((recette, index) => (\n            <Panel className=\"recette\" eventKey={index} key={index}>\n              <Panel.Heading>\n                <Panel.Title className=\"title\" toggle>{recette.name}</Panel.Title>\n              </Panel.Heading>\n              <Panel.Body  collapsible>\n                <ListGroup>\n                  {recette.ingredients.map((ingredient, index) => (\n                    <ListGroupItem className=\"ingr\" key={index}>{ingredient}</ListGroupItem>\n                  ))}\n                </ListGroup>\n                <ButtonToolbar>\n                  <Button  className=\"mod\" onClick={() => {this.showEditModal(index)}}>Modifier</Button>\n                  <Button className=\"sup\" onClick={() => {this.suprimerRecette(index)}}>Suprimer</Button>\n                </ButtonToolbar>\n              </Panel.Body>\n              <ModifierRecette onShow={this.state.showEdit} onEdit={this.modifierRecette} onEditModal={() => {this.showEditModal(currentlyEditing)}} currentlyEditing={currentlyEditing} recette={recettes[currentlyEditing]} />\n            </Panel>\n          ))}\n        </PanelGroup>\n        <Button className=\"save\" onClick={this.showAddModal}>Ajouter une Recette</Button>\n        <AjouterRecette onShow={this.state.showAdd} onAdd={this.ajouterRecette} onAddModal={this.showAddModal} />\n      </div>\n    );\n  }\n};\n\nReactDOM.render(<Recette />, document.getElementById('app'));"],"sourceRoot":""}